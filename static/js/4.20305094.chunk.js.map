{"version":3,"sources":["services/index.js","components/PaperStack/index.js","components/Button/index.js","components/Sidebar/index.js","components/Loading/index.js","assets/images/bg-2-desktop.jpg","assets/images/bg-2-mobile.jpg","pages/Home/index.js","hooks/index.js"],"names":["getListAlbums","token","a","pageSize","nextPageToken","url","fetch","method","headers","Authorization","resp","status","Error","json","data","getPhotoInAlbum","albumId","bodyParams","pageToken","body","JSON","stringify","GooglePhotoClient","auth","authReload","this","token_type","access_token","action","invoker","args","getToken","to","i","x","y","scale","rot","Math","random","delay","trans","r","s","StackPaper","papers","onNext","onClickItem","onPushoutItem","onClick","useState","Set","gone","useSprings","length","from","props","set","bind","useGesture","index","down","xDelta","delta","xDir","distance","direction","velocity","trigger","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","then","clear","availWidth","min","screen","images","map","isHor","width","height","isMobile","style","transform","interpolate","backgroundImage","backgroundSize","div","maxWidth","maxHeight","className","Button","children","Sidebar","logout","useAuth","position","bottom","left","Loading","Home","albums","setAlbums","setNextPageToken","fetchNext","useCallback","client","invoke","useEffect","useListAlbums","showMenuAlbum","setShowMenuAlbum","currentAlbum","setCurrentAlbum","photos","setPhotos","nextPhotosToken","setNextPhotosToken","turnOnMenuAlbum","turnOffMenuAlbum","id","mediaItems","bgMobile","bgDesktop","item","handleMenuItemClicked","title","filter","mimeType","startsWith","baseUrl","mediaMetadata","filename"],"mappings":"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","file":"static/js/4.20305094.chunk.js","sourcesContent":["async function getListAlbums(token, pageSize = 10, nextPageToken = null) {\n  let url = `https://photoslibrary.googleapis.com/v1/albums?&pageSize=${pageSize}`;\n  if (nextPageToken) {\n    url += `&pageToken=${nextPageToken}`;\n  }\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      Authorization: token,\n    },\n  });\n\n  if (resp.status !== 200) {\n    throw new Error(`${resp.status}: Fail to load list albums`);\n  }\n  const data = await resp.json();\n  return data;\n}\n\nasync function getPhotoInAlbum(\n  token,\n  albumId,\n  pageSize = 10,\n  nextPageToken = null\n) {\n  let url = \"https://photoslibrary.googleapis.com/v1/mediaItems:search\";\n  const bodyParams = {\n    albumId: albumId,\n    pageSize: pageSize,\n    pageToken: nextPageToken,\n  };\n  const resp = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      Authorization: token,\n    },\n    body: JSON.stringify(bodyParams),\n  });\n  if (resp.status !== 200) {\n    throw new Error(`${resp.status}: Fail to load list photo in the album`);\n  }\n  const data = await resp.json();\n  return data;\n}\n\nexport class GooglePhotoClient {\n  constructor(auth, authReload) {\n    this.auth = auth;\n    this.authReload = authReload;\n  }\n\n  getToken() {\n    return `${this.auth.token_type} ${this.auth.access_token}`;\n  }\n\n  async invoke(action, ...args) {\n    let invoker;\n    switch (action) {\n      case \"getListAlbums\":\n        invoker = getListAlbums;\n        break;\n      case \"getPhotoInAlbum\":\n        invoker = getPhotoInAlbum;\n        break;\n      default:\n        throw new Error(`Can't found action ${action}`);\n    }\n\n    let data;\n    try {\n      data = await invoker(this.this.getToken(), ...args);\n    } catch {\n      await this.authReload();\n      data = await invoker(this.getToken(), ...args);\n    }\n    return data;\n  }\n}\n","import React, { useState } from \"react\";\nimport { useSprings, animated, interpolate } from \"react-spring\";\nimport { useGesture } from \"react-use-gesture\";\nimport \"./style.scss\";\n\nconst to = (i) => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100,\n});\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 });\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(30deg) rotateY(${\n    r / 10\n  }deg) rotateZ(${r}deg) scale(${s})`;\n\nexport default function StackPaper({\n  papers,\n  onNext,\n  onClickItem,\n  onPushoutItem,\n  onClick,\n}) {\n  const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\n  const [props, set] = useSprings(papers.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  }));\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity,\n    }) => {\n      const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\n      const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\n      if (!down && trigger) {\n        gone.add(index);\n        onPushoutItem && onPushoutItem(papers[index]);\n      } else if (!down && !trigger) {\n        onClickItem && onClickItem(papers[index]);\n      }\n      set((i) => {\n        if (index !== i) return; // We're only interested in changing spring-data for the current spring\n        const isGone = gone.has(index);\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\n        const scale = down ? 1.1 : 1; // Active cards lift up a bit\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\n        };\n      });\n      if (!down && gone.size === papers.length)\n        onNext\n          ? onNext().then(() => {\n              gone.clear() || set((i) => to(i));\n            })\n          : gone.clear() || set((i) => to(i));\n    }\n  );\n\n  const availWidth = Math.min(window.screen.availWidth, 600);\n\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  const images = props.map(({ x, y, rot, scale }, i) => {\n    let { width, height } = papers[i];\n    const isHor = width > height;\n    const isMobile = window.screen.availWidth < 660;\n    const style = {\n      transform: interpolate([rot, scale], trans),\n      backgroundImage: `url(${papers[i].url}=w${availWidth})`,\n      backgroundSize: \"100%\",\n    };\n\n    return (\n      <animated.div\n        key={i}\n        style={{\n          transform: interpolate(\n            [x, y],\n            (x, y) => `translate3d(${x}px,${y}px,0)`\n          ),\n        }}\n        onClick={onClick}\n      >\n        <animated.div\n          {...bind(i)}\n          style={\n            isMobile\n              ? style\n              : {\n                  ...style,\n                  width: isHor ? \"85vh\" : \"45vh\",\n                  height: isHor ? \"45vh\" : \"85vh\",\n                  maxWidth: isHor ? \"570px\" : \"500px\",\n                  maxHeight: isHor ? \"500px\" : \"570px\",\n                  backgroundSize: isHor ? \"85% auto\" : \"auto 85%\",\n                }\n          }\n        />\n      </animated.div>\n    );\n  });\n\n  return (\n    <div className=\"StackPaper\" onClick={onClick}>\n      {images}\n    </div>\n  );\n}\n","import \"./style.scss\";\n\nexport default function Button(props) {\n  const { children } = props;\n  return (\n    <button {...props} className={`Button ${props.className}`}>\n      {children}\n    </button>\n  );\n}\n","import \"./style.scss\";\nimport Button from \"../Button\";\nimport { useAuth } from \"../../contexts\";\n\nexport default function Sidebar(props) {\n  const { children } = props;\n  const { logout } = useAuth();\n\n  return (\n    <div className={`Sidebar ${props.className}`}>\n      {children}\n      <Button\n        className=\"LogoutButton\"\n        onClick={logout}\n        style={{ position: \"absolute\", bottom: \"10px\", left: \"20px\" }}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n","import \"./style.scss\";\n\nexport default function Loading(props) {\n  return <div className={`loader ${props.className}`}></div>;\n}\n","export default __webpack_public_path__ + \"static/media/bg-2-desktop.cef3ab49.jpg\";","export default __webpack_public_path__ + \"static/media/bg-2-mobile.f3cb29fc.jpg\";","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useDeviceInfo, useListAlbums } from \"../../hooks\";\nimport { useAuth } from \"../../contexts\";\nimport { GooglePhotoClient } from \"../../services\";\nimport StackPaper from \"../../components/PaperStack\";\nimport Sidebar from \"../../components/Sidebar\";\nimport Button from \"../../components/Button\";\nimport Loading from \"../../components/Loading\";\nimport bgDesktop from \"../../assets/images/bg-2-desktop.jpg\";\nimport bgMobile from \"../../assets/images/bg-2-mobile.jpg\";\nimport \"./style.scss\";\n\nexport default function Home() {\n  const { albums } = useListAlbums(49);\n  const { isMobile } = useDeviceInfo();\n  const [showMenuAlbum, setShowMenuAlbum] = useState(false);\n  const [currentAlbum, setCurrentAlbum] = useState();\n  const { auth, authReload } = useAuth();\n  const [photos, setPhotos] = useState();\n  const [nextPhotosToken, setNextPhotosToken] = useState();\n\n  const turnOnMenuAlbum = useCallback(\n    () => setShowMenuAlbum(true),\n    [setShowMenuAlbum]\n  );\n  const turnOffMenuAlbum = useCallback(\n    () => setShowMenuAlbum(false),\n    [setShowMenuAlbum]\n  );\n\n  const fetchNext = async () => {\n    const client = new GooglePhotoClient(auth, authReload);\n    const data = await client.invoke(\n      \"getPhotoInAlbum\",\n      currentAlbum.id,\n      10,\n      nextPhotosToken\n    );\n    setNextPhotosToken(data?.nextPageToken);\n    setPhotos(data?.mediaItems);\n  };\n\n  useEffect(() => {\n    (async function () {\n      if (currentAlbum) {\n        const client = new GooglePhotoClient(auth, authReload);\n        const data = await client.invoke(\n          \"getPhotoInAlbum\",\n          currentAlbum.id,\n          10\n        );\n        setNextPhotosToken(data?.nextPageToken);\n        setPhotos(data?.mediaItems);\n      }\n    })();\n  }, [currentAlbum, auth]);\n\n  useEffect(() => albums, [albums]);\n\n  const handleMenuItemClicked = (item) => {\n    setCurrentAlbum(item);\n    turnOffMenuAlbum();\n  };\n\n  return (\n    <div className=\"Home BackApp\">\n      <div\n        className=\"bg\"\n        style={{\n          backgroundImage: `url(${isMobile ? bgMobile : bgDesktop})`,\n        }}\n      ></div>\n      {!!albums && albums.length > 0 ? (\n        <Button className=\"ShowAlbumMenuButton\" onClick={turnOnMenuAlbum}>\n          Albums\n        </Button>\n      ) : (\n        <Loading className=\"ShowAlbumMenuButton\" />\n      )}\n      {!!albums && albums.length > 0 && (\n        <Sidebar className={`MenuAlbum ${showMenuAlbum ? \"Show\" : \"Hidden\"}`}>\n          <ul className=\"AlbumList\">\n            {albums.map((item) => (\n              <li\n                className=\"AlbumItem\"\n                key={item.id}\n                onClick={() => handleMenuItemClicked(item)}\n              >\n                {item.title}\n              </li>\n            ))}\n          </ul>\n        </Sidebar>\n      )}\n      {!!photos && photos.length > 0 && (\n        <StackPaper\n          onClick={turnOffMenuAlbum}\n          onNext={fetchNext}\n          papers={photos\n            .filter((item) => item.mimeType.startsWith(\"image/\"))\n            .map((item) => ({\n              id: item.id,\n              url: item.baseUrl,\n              width: item.mediaMetadata.width,\n              height: item.mediaMetadata.height,\n              title: item.filename,\n            }))}\n        />\n      )}\n    </div>\n  );\n}\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"../contexts\";\nimport { GooglePhotoClient } from \"../services\";\n\nexport function useListAlbums(pageSize = 10) {\n  const [albums, setAlbums] = useState([]);\n  const [nextPageToken, setNextPageToken] = useState();\n  const { auth, authReload } = useAuth();\n\n  const fetchNext = useCallback(async () => {\n    if (auth) {\n      const client = new GooglePhotoClient(auth, authReload);\n      const data = await client.invoke(\n        \"getListAlbums\",\n        pageSize,\n        nextPageToken\n      );\n      setNextPageToken(data?.nextPageToken);\n      setAlbums(data?.albums);\n    }\n  }, [auth, setAlbums, nextPageToken, authReload, pageSize]);\n\n  useEffect(() => {\n    fetchNext();\n  }, [auth]);\n\n  return { albums, fetchNext };\n}\n\nexport function useDeviceInfo() {\n  const isMobile = window.screen.availWidth < 660;\n  return { isMobile };\n}\n"],"sourceRoot":""}