{"version":3,"sources":["components/PaperStack/index.js","components/Button/index.js","services/index.js","hooks/index.js","assets/images/bg-2-desktop.jpg","assets/images/bg-2-mobile.jpg","pages/Album/index.js"],"names":["to","i","x","y","scale","rot","Math","random","delay","trans","r","s","StackPaper","papers","onNext","onClickItem","onPushoutItem","useState","Set","gone","useSprings","length","from","props","set","bind","useGesture","index","args","down","xDelta","delta","xDir","distance","direction","velocity","trigger","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","then","clear","availWidth","min","screen","images","map","isHor","width","height","isMobile","style","transform","interpolate","backgroundImage","url","backgroundSize","div","maxWidth","maxHeight","className","Button","children","GooglePhotoClient","token","this","a","pageSize","nextPageToken","fetch","method","headers","Authorization","resp","status","Error","json","data","albumId","bodyParams","pageToken","body","JSON","stringify","useListAlbums","albums","setAlbums","setNextPageToken","useAuth","auth","authReload","fetchNext","useCallback","client","token_type","access_token","getListAlbums","message","startsWith","useEffect","useListPhotoInAlbum","photos","setPhotos","getPhotoInAlbum","mediaItems","useDeviceInfo","Album","usePage","page","setPage","params","bgMobile","bgDesktop","onClick","filter","item","mimeType","id","baseUrl","mediaMetadata","title","filename"],"mappings":"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","file":"static/js/4.4a701c50.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useSprings, animated, interpolate } from \"react-spring\";\nimport { useGesture } from \"react-use-gesture\";\nimport \"./style.scss\";\n\nconst to = (i) => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100,\n});\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 });\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(30deg) rotateY(${\n    r / 10\n  }deg) rotateZ(${r}deg) scale(${s})`;\n\nexport default function StackPaper({\n  papers,\n  onNext,\n  onClickItem,\n  onPushoutItem,\n}) {\n  const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\n  const [props, set] = useSprings(papers.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  }));\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity,\n    }) => {\n      const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\n      const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\n      if (!down && trigger) {\n        gone.add(index);\n        onPushoutItem && onPushoutItem(papers[index]);\n      } else if (!down && !trigger) {\n        onClickItem && onClickItem(papers[index]);\n      }\n      set((i) => {\n        if (index !== i) return; // We're only interested in changing spring-data for the current spring\n        const isGone = gone.has(index);\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\n        const scale = down ? 1.1 : 1; // Active cards lift up a bit\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\n        };\n      });\n      if (!down && gone.size === papers.length)\n        onNext\n          ? onNext().then(() => {\n              gone.clear() || set((i) => to(i));\n            })\n          : gone.clear() || set((i) => to(i));\n    }\n  );\n\n  const availWidth = Math.min(window.screen.availWidth, 600);\n\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  const images = props.map(({ x, y, rot, scale }, i) => {\n    let { width, height } = papers[i];\n    const isHor = width > height;\n    const isMobile = window.screen.availWidth < 660;\n    const style = {\n      transform: interpolate([rot, scale], trans),\n      backgroundImage: `url(${papers[i].url}=w${availWidth})`,\n      backgroundSize: \"100%\",\n    };\n\n    return (\n      <animated.div\n        key={i}\n        style={{\n          transform: interpolate(\n            [x, y],\n            (x, y) => `translate3d(${x}px,${y}px,0)`\n          ),\n        }}\n      >\n        <animated.div\n          {...bind(i)}\n          style={\n            isMobile\n              ? style\n              : {\n                  ...style,\n                  width: isHor ? \"85vh\" : \"45vh\",\n                  height: isHor ? \"45vh\" : \"85vh\",\n                  maxWidth: isHor ? \"570px\" : \"500px\",\n                  maxHeight: isHor ? \"500px\" : \"570px\",\n                  backgroundSize: isHor ? \"85% auto\" : \"auto 85%\",\n                }\n          }\n        />\n      </animated.div>\n    );\n  });\n\n  return <div className=\"StackPaper\">{images}</div>;\n}\n","import \"./style.scss\";\n\nexport default function Button(props) {\n  const { children } = props;\n  return (\n    <button {...props} className={`Button ${props.className}`}>\n      {children}\n    </button>\n  );\n}\n","export class GooglePhotoClient {\n  constructor(token) {\n    this.token = token;\n  }\n\n  async getListAlbums(pageSize = 10, nextPageToken = null) {\n    let url = `https://photoslibrary.googleapis.com/v1/albums?&pageSize=${pageSize}`;\n    if (nextPageToken) {\n      url += `&pageToken=${nextPageToken}`;\n    }\n    const resp = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: this.token,\n      },\n    });\n\n    if (resp.status !== 200) {\n      throw new Error(`${resp.status}: Fail to load list albums`);\n    }\n    const data = await resp.json();\n    return data;\n  }\n\n  async getPhotoInAlbum(albumId, pageSize = 10, nextPageToken = null) {\n    let url = \"https://photoslibrary.googleapis.com/v1/mediaItems:search\";\n    const bodyParams = {\n      albumId: albumId,\n      pageSize: pageSize,\n      pageToken: nextPageToken,\n    };\n    const resp = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: this.token,\n      },\n      body: JSON.stringify(bodyParams),\n    });\n    if (resp.status !== 200) {\n      throw new Error(`${resp.status}: Fail to load list photo in the album`);\n    }\n    const data = await resp.json();\n    return data;\n  }\n}\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useAuth } from \"../contexts\";\nimport { GooglePhotoClient } from \"../services\";\n\nexport function useListAlbums(pageSize = 10) {\n  const [albums, setAlbums] = useState([]);\n  const [nextPageToken, setNextPageToken] = useState();\n  const { auth, authReload } = useAuth();\n\n  const fetchNext = useCallback(async () => {\n    if (auth) {\n      const client = new GooglePhotoClient(\n        `${auth.token_type} ${auth.access_token}`\n      );\n      let data;\n      try {\n        data = await client.getListAlbums(pageSize, nextPageToken);\n      } catch (e) {\n        if (e.message.startsWith(\"401\")) {\n          await authReload();\n          data = await client.getListAlbums(pageSize, nextPageToken);\n        }\n      }\n      setNextPageToken(data?.nextPageToken);\n      setAlbums(data?.albums);\n    }\n  }, [auth, setAlbums, nextPageToken, authReload, pageSize]);\n\n  useEffect(() => {\n    fetchNext();\n  }, [auth]);\n\n  return { albums, fetchNext };\n}\n\nexport function useListPhotoInAlbum(albumId, pageSize = 10) {\n  const [photos, setPhotos] = useState([]);\n  const [nextPageToken, setNextPageToken] = useState();\n  const { auth, authReload } = useAuth();\n\n  const fetchNext = useCallback(async () => {\n    if (auth) {\n      const client = new GooglePhotoClient(\n        `${auth.token_type} ${auth.access_token}`\n      );\n      let data;\n      try {\n        data = await client.getPhotoInAlbum(albumId, pageSize, nextPageToken);\n      } catch (e) {\n        if (e.message.startsWith(\"401\")) {\n          await authReload();\n          data = await client.getPhotoInAlbum(albumId, pageSize, nextPageToken);\n        }\n      }\n      setNextPageToken(data?.nextPageToken);\n      setPhotos(data?.mediaItems);\n    }\n  }, [auth, albumId, authReload, nextPageToken, pageSize]);\n\n  useEffect(() => {\n    fetchNext();\n  }, [auth]);\n\n  return { photos, fetchNext };\n}\n\nexport function useDeviceInfo() {\n  const isMobile = window.screen.availWidth < 660;\n  return { isMobile };\n}\n","export default __webpack_public_path__ + \"static/media/bg-2-desktop.cef3ab49.jpg\";","export default __webpack_public_path__ + \"static/media/bg-2-mobile.f3cb29fc.jpg\";","import React from \"react\";\nimport { useListPhotoInAlbum, useDeviceInfo } from \"../../hooks\";\nimport { usePage } from \"../../contexts\";\nimport StackPaper from \"../../components/PaperStack\";\nimport Button from \"../../components/Button\";\nimport bgDesktop from \"../../assets/images/bg-2-desktop.jpg\";\nimport bgMobile from \"../../assets/images/bg-2-mobile.jpg\";\nimport \"./style.scss\";\n\nexport default function Album() {\n  const { page, setPage } = usePage();\n  const { photos, fetchNext } = useListPhotoInAlbum(page.params.albumId, 10);\n  const { isMobile } = useDeviceInfo();\n\n  return (\n    <div className=\"Album BackApp\">\n      <div\n        className=\"bg\"\n        style={{\n          backgroundImage: `url(${isMobile ? bgMobile : bgDesktop})`,\n        }}\n      ></div>\n      <Button\n        className=\"BackButton\"\n        onClick={() => {\n          setPage(\"home\");\n        }}\n      >\n        Back\n      </Button>\n      <StackPaper\n        onNext={fetchNext}\n        papers={photos\n          .filter((item) => item.mimeType.startsWith(\"image/\"))\n          .map((item) => ({\n            id: item.id,\n            url: item.baseUrl,\n            width: item.mediaMetadata.width,\n            height: item.mediaMetadata.height,\n            title: item.filename,\n          }))}\n      />\n    </div>\n  );\n}\n"],"sourceRoot":""}