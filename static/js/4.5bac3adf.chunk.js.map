{"version":3,"sources":["services/index.js","hooks/index.js","pages/Album/index.js"],"names":["GooglePhotoClient","tokenObj","this","token","token_type","access_token","a","pageSize","nextPageToken","url","fetch","method","headers","Authorization","resp","status","Error","json","data","albumId","bodyParams","pageToken","body","JSON","stringify","ALLOW_ALBUMS","useListAlbums","useState","albums","setAlbums","setNextPageToken","auth","useAuth","fetchNext","client","getListAlbums","filter","item","includes","id","useEffect","useListPhotoInAlbum","photos","setPhotos","getPhotoInAlbum","mediaItems","mimeType","startsWith","to","i","x","y","scale","rot","Math","random","delay","trans","r","s","Album","usePage","page","setPage","params","Set","gone","useSprings","length","from","props","set","bind","useGesture","index","args","down","xDelta","delta","xDir","distance","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","then","clear","availWidth","min","screen","images","map","mediaMetadata","isHor","width","height","isMobile","style","transform","interpolate","backgroundImage","baseUrl","backgroundSize","div","maxWidth","maxHeight","className","onClick"],"mappings":"qOAAaA,EAAb,WACE,WAAYC,GAAW,oBACrBC,KAAKC,MAAL,UAAgBF,EAASG,WAAzB,YAAuCH,EAASI,cAFpD,wFAKE,gDAAAC,EAAA,6DAAoBC,EAApB,+BAA+B,GAAIC,EAAnC,+BAAmD,KAC7CC,EADN,mEACwEF,GAClEC,IACFC,GAAG,qBAAkBD,IAHzB,SAKqBE,MAAMD,EAAK,CAC5BE,OAAQ,MACRC,QAAS,CACPC,cAAeX,KAAKC,SAR1B,UAYsB,OAPdW,EALR,QAYWC,OAZX,sBAaU,IAAIC,MAAM,4BAbpB,wBAeqBF,EAAKG,OAf1B,eAeQC,EAfR,yBAgBSA,GAhBT,iDALF,0HAwBE,WAAsBC,GAAtB,qCAAAb,EAAA,6DAA+BC,EAA/B,+BAA0C,GAAIC,EAA9C,+BAA8D,KACxDC,EAAM,4DACJW,EAAa,CACjBD,QAASA,EACTZ,SAAUA,EACVc,UAAWb,GALf,SAOqBE,MAAMD,EAAK,CAC5BE,OAAQ,OACRC,QAAS,CACPC,cAAeX,KAAKC,OAEtBmB,KAAMC,KAAKC,UAAUJ,KAZzB,UAcsB,OAPdN,EAPR,QAcWC,OAdX,sBAeU,IAAIC,MAAM,wCAfpB,wBAiBqBF,EAAKG,OAjB1B,eAiBQC,EAjBR,yBAkBSA,GAlBT,iDAxBF,8DCIMO,EAAe,CACnB,+EACA,+EACA,gFAGK,SAASC,IAA8B,IAAhBnB,EAAe,uDAAJ,GACvC,EAA4BoB,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0CF,qBAA1C,mBAAOnB,EAAP,KAAsBsB,EAAtB,KACMC,EAAOC,cAEPC,EAAS,uCAAG,8BAAA3B,EAAA,0DACZyB,EADY,uBAERG,EAAS,IAAIlC,EAAkB+B,EAAK9B,UAF5B,SAGKiC,EAAOC,cAAc5B,EAAUC,GAHpC,OAGRU,EAHQ,OAIdY,EAAiBZ,EAAKV,eAEtBqB,EAAUX,EAAKU,OAAOQ,QAAO,SAACC,GAAD,OAAUZ,EAAaa,SAASD,EAAKE,QANpD,2CAAH,qDAcf,OAJAC,qBAAU,WACRP,MACC,CAACF,IAEG,CAAEH,SAAQK,aAGZ,SAASQ,EAAoBtB,GAAyB,IAAhBZ,EAAe,uDAAJ,GACtD,EAA4BoB,mBAAS,IAArC,mBAAOe,EAAP,KAAeC,EAAf,KACA,EAA0ChB,qBAA1C,mBAAOnB,EAAP,KAAsBsB,EAAtB,KACMC,EAAOC,cAEPC,EAAS,uCAAG,8BAAA3B,EAAA,0DACZyB,EADY,uBAERG,EAAS,IAAIlC,EAAkB+B,EAAK9B,UAF5B,SAGKiC,EAAOU,gBACxBzB,EACAZ,EACAC,GANY,OAGRU,EAHQ,OAQdY,EAAiBZ,EAAKV,eAEtBmC,EACEzB,EAAK2B,WAAWT,QAAO,SAACC,GAAD,OAAUA,EAAKS,SAASC,WAAW,aAX9C,2CAAH,qDAoBf,OAJAP,qBAAU,WACRP,MACC,CAACF,IAEG,CAAEW,SAAQT,e,4KCjDbe,EAAK,SAACC,GAAD,MAAQ,CACjBC,EAAG,EACHC,GAAQ,EAALF,EACHG,MAAO,EACPC,IAA2B,GAAhBC,KAAKC,SAAV,GACNC,MAAW,IAAJP,IAIHQ,EAAQ,SAACC,EAAGC,GAAJ,2DAEVD,EAAI,GAFM,wBAGIA,EAHJ,sBAGmBC,EAHnB,MAKC,SAASC,IACtB,MAA0BC,cAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QACd,EAA8BtB,YAAoBqB,EAAKE,OAAO7C,QAAS,IAA/DuB,EAAR,EAAQA,OAAQT,EAAhB,EAAgBA,UAChB,EAAeN,oBAAS,kBAAM,IAAIsC,OAA3BC,EAAP,oBACA,EAAqBC,qBAAWzB,EAAO0B,QAAQ,SAACnB,GAAD,mBAAC,eAC3CD,EAAGC,IADuC,IAE7CoB,KAbiB,CAAEnB,EAAG,EAAGG,IAAK,EAAGD,MAAO,IAAKD,GAAI,UAWnD,mBAAOmB,EAAP,KAAcC,EAAd,KAOMC,EAAOC,aACX,YAOO,IANEC,EAMH,cANJC,KAMI,MALJC,EAKI,EALJA,KACQC,EAIJ,cAJJC,MAII,MAFQC,GAER,EAHJC,SAGI,cAFJC,UAEI,OADJC,EACI,EADJA,SAGMC,EAAMJ,EAAO,GAAK,EAAI,GACvBH,GAFWM,EAAW,IAGzBhB,EAAKkB,IAAIV,GAEXH,GAAI,SAACtB,GACH,GAAIyB,IAAUzB,EAAd,CACA,IAAMoC,EAASnB,EAAKoB,IAAIZ,GAIxB,MAAO,CACLxB,EAJQmC,GAAU,IAAME,OAAOC,YAAcL,EAAMP,EAAOC,EAAS,EAKnExB,IAJUwB,EAAS,KAAOQ,EAAe,GAANF,EAAWD,EAAW,GAKzD9B,MAJYwB,EAAO,IAAM,EAKzBpB,WAAOiC,EACPC,OAAQ,CAAEC,SAAU,GAAIC,QAAShB,EAAO,IAAMS,EAAS,IAAM,UAG5DT,GAAQV,EAAK2B,OAASnD,EAAO0B,QAChCnC,IAAY6D,MAAK,WACf5B,EAAK6B,SAAWxB,GAAI,SAACtB,GAAD,OAAOD,EAAGC,YAKhC+C,EAAa1C,KAAK2C,IAAIV,OAAOW,OAAOF,WAAY,KAGhDG,EAAS7B,EAAM8B,KAAI,WAAuBnD,GAAO,IAA3BC,EAA0B,EAA1BA,EAAGC,EAAuB,EAAvBA,EAAGE,EAAoB,EAApBA,IAAKD,EAAe,EAAfA,MACrC,EAAwBV,EAAOO,GAAGoD,cAC5BC,EADN,EAAMC,MAAN,EAAaC,OAEPC,EAAWlB,OAAOW,OAAOF,WAAa,IACtCU,EAAQ,CACZC,UAAWC,sBAAY,CAACvD,EAAKD,GAAQK,GACrCoD,gBAAgB,OAAD,OAASnE,EAAOO,GAAG6D,QAAnB,aAA+Bd,EAA/B,KACfe,eAAgB,QAGlB,OACE,cAAC,WAASC,IAAV,CAEEN,MAAO,CACLC,UAAWC,sBACT,CAAC1D,EAAGC,IACJ,SAACD,EAAGC,GAAJ,4BAAyBD,EAAzB,cAAgCC,EAAhC,aALN,SAUE,cAAC,WAAS6D,IAAV,2BACMxC,EAAKvB,IADX,IAEEyD,MACED,EACIC,EADI,2BAGCA,GAHD,IAIFH,MAAOD,EAAQ,OAAS,OACxBE,OAAQF,EAAQ,OAAS,OACzBW,SAAUX,EAAQ,QAAU,QAC5BY,UAAWZ,EAAQ,QAAU,QAC7BS,eAAgBT,EAAQ,WAAa,iBApB1CrD,MA4BX,OACE,sBAAKkE,UAAU,gBAAf,UACE,qBAAKA,UAAU,OACf,qBACEA,UAAU,aACVC,QAAS,WACPrD,EAAQ,SAHZ,kBAQA,qBAAKoD,UAAU,aAAf,SAA6BhB","file":"static/js/4.5bac3adf.chunk.js","sourcesContent":["export class GooglePhotoClient {\n  constructor(tokenObj) {\n    this.token = `${tokenObj.token_type} ${tokenObj.access_token}`;\n  }\n\n  async getListAlbums(pageSize = 10, nextPageToken = null) {\n    let url = `https://photoslibrary.googleapis.com/v1/albums?&pageSize=${pageSize}`;\n    if (nextPageToken) {\n      url += `&pageToken=${nextPageToken}`;\n    }\n    const resp = await fetch(url, {\n      method: \"GET\",\n      headers: {\n        Authorization: this.token,\n      },\n    });\n\n    if (resp.status !== 200) {\n      throw new Error(\"Fail to load list albums\");\n    }\n    const data = await resp.json();\n    return data;\n  }\n\n  async getPhotoInAlbum(albumId, pageSize = 10, nextPageToken = null) {\n    let url = \"https://photoslibrary.googleapis.com/v1/mediaItems:search\";\n    const bodyParams = {\n      albumId: albumId,\n      pageSize: pageSize,\n      pageToken: nextPageToken,\n    };\n    const resp = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        Authorization: this.token,\n      },\n      body: JSON.stringify(bodyParams),\n    });\n    if (resp.status !== 200) {\n      throw new Error(\"Fail to load list photo in the album\");\n    }\n    const data = await resp.json();\n    return data;\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { useAuth } from \"../contexts\";\nimport { GooglePhotoClient } from \"../services\";\n\nconst ALLOW_ALBUMS = [\n  \"AFQKIAIDtGHas7h0c5nnnlDez-2BSpsbZldeRUAaI0TEU3DY2ktGwZu6oDQff6w9M_CWnhK-823B\",\n  \"AFQKIAIDT9DT3pScu6fNwkuooH8haUjBQdePIoesJqMg3LD4TypzWPRESMtZ5zoA97yzpL0g9Y1g\",\n  \"AFQKIAIdl9voQbVKtwOROkREXucrQQ0GlXaCy8ZUSemJZsPCeXHG3DRnuwC99cMu0ARP-WzCL_zT\",\n];\n\nexport function useListAlbums(pageSize = 10) {\n  const [albums, setAlbums] = useState([]);\n  const [nextPageToken, setNextPageToken] = useState();\n  const auth = useAuth();\n\n  const fetchNext = async () => {\n    if (auth) {\n      const client = new GooglePhotoClient(auth.tokenObj);\n      const data = await client.getListAlbums(pageSize, nextPageToken);\n      setNextPageToken(data.nextPageToken);\n      // setAlbums([...albums, ...data.albums]);\n      setAlbums(data.albums.filter((item) => ALLOW_ALBUMS.includes(item.id)));\n    }\n  };\n\n  useEffect(() => {\n    fetchNext();\n  }, [auth]);\n\n  return { albums, fetchNext };\n}\n\nexport function useListPhotoInAlbum(albumId, pageSize = 10) {\n  const [photos, setPhotos] = useState([]);\n  const [nextPageToken, setNextPageToken] = useState();\n  const auth = useAuth();\n\n  const fetchNext = async () => {\n    if (auth) {\n      const client = new GooglePhotoClient(auth.tokenObj);\n      const data = await client.getPhotoInAlbum(\n        albumId,\n        pageSize,\n        nextPageToken\n      );\n      setNextPageToken(data.nextPageToken);\n      // setPhotos([...photos, ...data.mediaItems]);\n      setPhotos(\n        data.mediaItems.filter((item) => item.mimeType.startsWith(\"image\"))\n      );\n    }\n  };\n\n  useEffect(() => {\n    fetchNext();\n  }, [auth]);\n\n  return { photos, fetchNext };\n}\n","import React, { useState } from \"react\";\nimport { useSprings, animated, interpolate } from \"react-spring\";\nimport { useGesture } from \"react-use-gesture\";\nimport { useListPhotoInAlbum } from \"../../hooks\";\nimport { usePage } from \"../../contexts\";\n\nimport \"./style.scss\";\n\nconst to = (i) => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100,\n});\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 });\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(30deg) rotateY(${\n    r / 10\n  }deg) rotateZ(${r}deg) scale(${s})`;\n\nexport default function Album() {\n  const { page, setPage } = usePage();\n  const { photos, fetchNext } = useListPhotoInAlbum(page.params.albumId, 10);\n  const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\n  const [props, set] = useSprings(photos.length, (i) => ({\n    ...to(i),\n    from: from(i),\n  })); // Create a bunch of springs using the helpers above\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n  //\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity,\n    }) => {\n      const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\n      const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\n      if (!down && trigger) {\n        gone.add(index);\n      } // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n      set((i) => {\n        if (index !== i) return; // We're only interested in changing spring-data for the current spring\n        const isGone = gone.has(index);\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\n        const scale = down ? 1.1 : 1; // Active cards lift up a bit\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\n        };\n      });\n      if (!down && gone.size === photos.length)\n        fetchNext().then(() => {\n          gone.clear() || set((i) => to(i));\n        });\n    }\n  );\n\n  const availWidth = Math.min(window.screen.availWidth, 600);\n\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  const images = props.map(({ x, y, rot, scale }, i) => {\n    let { width, height } = photos[i].mediaMetadata;\n    const isHor = width > height;\n    const isMobile = window.screen.availWidth < 660;\n    const style = {\n      transform: interpolate([rot, scale], trans),\n      backgroundImage: `url(${photos[i].baseUrl}=w${availWidth})`,\n      backgroundSize: \"100%\",\n    };\n\n    return (\n      <animated.div\n        key={i}\n        style={{\n          transform: interpolate(\n            [x, y],\n            (x, y) => `translate3d(${x}px,${y}px,0)`\n          ),\n        }}\n      >\n        {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\n        <animated.div\n          {...bind(i)}\n          style={\n            isMobile\n              ? style\n              : {\n                  ...style,\n                  width: isHor ? \"85vh\" : \"45vh\",\n                  height: isHor ? \"45vh\" : \"85vh\",\n                  maxWidth: isHor ? \"570px\" : \"500px\",\n                  maxHeight: isHor ? \"500px\" : \"570px\",\n                  backgroundSize: isHor ? \"85% auto\" : \"auto 85%\",\n                }\n          }\n        />\n      </animated.div>\n    );\n  });\n\n  return (\n    <div className=\"Album BackApp\">\n      <div className=\"bg\"></div>\n      <div\n        className=\"BackButton\"\n        onClick={() => {\n          setPage(\"home\");\n        }}\n      >\n        Back\n      </div>\n      <div className=\"StackPhoto\">{images}</div>\n    </div>\n  );\n}\n"],"sourceRoot":""}