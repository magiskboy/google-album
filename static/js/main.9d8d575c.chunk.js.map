{"version":3,"sources":["App.js","index.js","contexts/index.js","environment.js"],"names":["pages","Map","React","lazy","App","useState","name","params","page","setPage","data","localStorage","getItem","GOOGLE_AUTH_RESPONSE_KEY","JSON","parse","e","loadAuthFromLocal","auth","pageContextValue","authContextValue","setAuth","PageComponent","has","get","className","Provider","value","fallback","ReactDOM","render","StrictMode","document","getElementById","PageContext","createContext","AuthContext","useAuth","useContext","authReloader","setAuthReloader","authReload","useCallback","a","setItem","stringify","logout","removeItem","window","location","reload","signIn","useGoogleLogin","onSuccess","response","getAuthResponse","reloadAuthResponse","clientId","scope","useEffect","expires_at","Date","getTime"],"mappings":"4LAKMA,EAAQ,IAAIC,IAAI,CAAC,CAAC,OADXC,IAAMC,MAAK,kBAAM,yDA0CfC,MA5Bf,WACE,MAAwBC,mBAAS,CAAEC,KAAM,OAAQC,OAAQ,KAAzD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBJ,mBAX1B,WACE,IACE,IAAMK,EAAOC,aAAaC,QAAQC,KAClC,OAAOC,KAAKC,MAAML,GAClB,MAAOM,GACP,QAM+BC,IAAjC,mBAAOC,EAAP,KACMC,EAAmB,CACvBV,UACAD,QAEIY,EAAmB,CACvBC,QANF,KAOEH,QAEII,EAAgBtB,EAAMuB,IAAIf,EAAKF,MACjCN,EAAMwB,IAAIhB,EAAKF,MACfN,EAAMwB,IAxBS,QA0BnB,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAYC,SAAb,CAAsBC,MAAOR,EAA7B,SACE,cAAC,IAAYO,SAAb,CAAsBC,MAAOP,EAA7B,SACE,cAAC,WAAD,CAAUQ,SAAU,6CAApB,SACE,cAACN,EAAD,aClCZO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,iOCJbC,EAAchC,IAAMiC,cAAc,MAGlCtB,EAA2B,qBAC3BuB,EAAclC,IAAMiC,cAAc,MAClCE,EAAU,WACrB,MAA0BC,qBAAWF,GAA7Bf,EAAR,EAAQA,QAASH,EAAjB,EAAiBA,KACjB,EAAwCb,qBAAxC,mBAAOkC,EAAP,KAAqBC,EAArB,KAEMC,EAAaC,sBAAW,sBAAC,4BAAAC,EAAA,0DACzBJ,EADyB,gCAERA,IAFQ,cAErB7B,EAFqB,OAG3BC,aAAaiC,QAAQ/B,EAA0BC,KAAK+B,UAAUnC,IAC9DW,EAAQX,GAJmB,kBAKpBA,GALoB,2CAO5B,CAAC6B,EAAclB,IAEZyB,EAASJ,uBAAY,WACzB/B,aAAaoC,WAAWlC,GACxBmC,OAAOC,SAASC,WACf,IAEKC,EAAWC,yBAAe,CAChCC,UAAW,SAACC,GACV,IAAM5C,EAAO4C,EAASC,kBACtB5C,aAAaiC,QAAQ/B,EAA0BC,KAAK+B,UAAUnC,IAC9DW,EAAQX,GACR8B,EAAgBc,EAASE,qBAE3BC,SCjCF,2EDkCEC,MC/BF,2DDuBQP,OAiBR,OANAQ,qBAAU,aACHzC,GAAQA,EAAK0C,YAAa,IAAIC,MAAOC,YACxCX,MAED,CAACjC,EAAMiC,IAEH,CACLjC,OACAuB,aACAK,a","file":"static/js/main.9d8d575c.chunk.js","sourcesContent":["import React, { useState, Suspense } from \"react\";\nimport { PageContext, AuthContext, GOOGLE_AUTH_RESPONSE_KEY } from \"./contexts\";\nimport \"./App.scss\";\n\nconst Home = React.lazy(() => import(\"./pages/Home\"));\nconst pages = new Map([[\"home\", Home]]);\n\nconst DEFAULT_PAGE = \"home\";\n\nfunction loadAuthFromLocal() {\n  try {\n    const data = localStorage.getItem(GOOGLE_AUTH_RESPONSE_KEY);\n    return JSON.parse(data);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction App() {\n  const [page, setPage] = useState({ name: \"home\", params: {} });\n  const [auth, setAuth] = useState(loadAuthFromLocal());\n  const pageContextValue = {\n    setPage,\n    page,\n  };\n  const authContextValue = {\n    setAuth,\n    auth,\n  };\n  const PageComponent = pages.has(page.name)\n    ? pages.get(page.name)\n    : pages.get(DEFAULT_PAGE);\n\n  return (\n    <div className=\"App\">\n      <PageContext.Provider value={pageContextValue}>\n        <AuthContext.Provider value={authContextValue}>\n          <Suspense fallback={<div>Loading...</div>}>\n            <PageComponent />\n          </Suspense>\n        </AuthContext.Provider>\n      </PageContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useContext, useEffect, useState, useCallback } from \"react\";\nimport { useGoogleLogin } from \"react-google-login\";\nimport { GOOGLE_SCOPE, GOOGLE_CLIENT_ID } from \"../environment\";\n\nexport const PageContext = React.createContext(null);\nexport const usePage = () => useContext(PageContext);\n\nexport const GOOGLE_AUTH_RESPONSE_KEY = \"googleAuthResponse\";\nexport const AuthContext = React.createContext(null);\nexport const useAuth = () => {\n  const { setAuth, auth } = useContext(AuthContext);\n  const [authReloader, setAuthReloader] = useState();\n\n  const authReload = useCallback(async () => {\n    if (authReloader) {\n      const data = await authReloader();\n      localStorage.setItem(GOOGLE_AUTH_RESPONSE_KEY, JSON.stringify(data));\n      setAuth(data);\n      return data;\n    }\n  }, [authReloader, setAuth]);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem(GOOGLE_AUTH_RESPONSE_KEY);\n    window.location.reload();\n  }, []);\n\n  const { signIn } = useGoogleLogin({\n    onSuccess: (response) => {\n      const data = response.getAuthResponse();\n      localStorage.setItem(GOOGLE_AUTH_RESPONSE_KEY, JSON.stringify(data));\n      setAuth(data);\n      setAuthReloader(response.reloadAuthResponse);\n    },\n    clientId: GOOGLE_CLIENT_ID,\n    scope: GOOGLE_SCOPE,\n  });\n\n  useEffect(() => {\n    if (!auth || auth.expires_at < new Date().getTime()) {\n      signIn();\n    }\n  }, [auth, signIn]);\n\n  return {\n    auth,\n    authReload,\n    logout,\n  };\n};\n","export const GOOGLE_CLIENT_ID =\n  \"488762331302-o2knjrrhfk1bc4f5fecusvaod97uosdt.apps.googleusercontent.com\";\n\nexport const GOOGLE_SCOPE =\n  \"https://www.googleapis.com/auth/photoslibrary.readonly\";\n"],"sourceRoot":""}