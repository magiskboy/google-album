{"version":3,"sources":["App.js","index.js","contexts/index.js","environment.js"],"names":["pages","Map","React","lazy","App","useState","name","params","page","setPage","auth","pageContextValue","authContextValue","setAuth","PageComponent","has","get","document","documentElement","requestFullscreen","Provider","value","fallback","ReactDOM","render","StrictMode","getElementById","PageContext","createContext","usePage","useContext","AuthContext","useAuth","signIn","useGoogleLogin","onSuccess","response","clientId","scope","useEffect"],"mappings":"4LAOMA,EAAQ,IAAIC,IAAI,CACpB,CAAC,OAJUC,IAAMC,MAAK,kBAAM,uDAK5B,CAAC,QAJWD,IAAMC,MAAK,kBAAM,iCAK7B,CAAC,QAJWD,IAAMC,MAAK,kBAAM,yDAqChBC,MA5Bf,WACE,MAAwBC,mBAAS,CAAEC,KAAM,OAAQC,OAAQ,KAAzD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBJ,qBAAxB,mBAAOK,EAAP,KACMC,EAAmB,CACvBF,UACAD,QAEII,EAAmB,CACvBC,QANF,KAOEH,QAEII,EAAgBd,EAAMe,IAAIP,EAAKF,MACjCN,EAAMgB,IAAIR,EAAKF,MACfN,EAAMgB,IAfS,QAmBnB,OAFAC,SAASC,gBAAgBC,oBAGvB,cAAC,IAAYC,SAAb,CAAsBC,MAAOV,EAA7B,SACE,cAAC,IAAYS,SAAb,CAAsBC,MAAOT,EAA7B,SACE,cAAC,WAAD,CAAUU,SAAU,6CAApB,SACE,cAACR,EAAD,WChCVS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFR,SAASS,eAAe,U,kMCJbC,EAAczB,IAAM0B,cAAc,MAClCC,EAAU,kBAAMC,qBAAWH,IAE3BI,EAAc7B,IAAM0B,cAAc,MAClCI,EAAU,WACrB,MAA0BF,qBAAWC,GAA7BlB,EAAR,EAAQA,QAASH,EAAjB,EAAiBA,KACTuB,EAAWC,yBAAe,CAChCC,UAAW,SAACC,GAAD,OAAcvB,EAAQuB,IACjCC,SCXF,2EDYEC,MCTF,2DDMQL,OAQR,OAHAM,qBAAU,YACP7B,GAAQuB,MACR,CAACvB,EAAMuB,IACHvB,K","file":"static/js/main.cd883aad.chunk.js","sourcesContent":["import React, { useState, Suspense } from \"react\";\nimport { PageContext, AuthContext } from \"./contexts\";\nimport \"./App.scss\";\n\nconst Home = React.lazy(() => import(\"./pages/Home\"));\nconst Login = React.lazy(() => import(\"./pages/Login\"));\nconst Album = React.lazy(() => import(\"./pages/Album\"));\nconst pages = new Map([\n  [\"home\", Home],\n  [\"login\", Login],\n  [\"album\", Album],\n]);\n\nconst DEFAULT_PAGE = \"home\";\n\nfunction App() {\n  const [page, setPage] = useState({ name: \"home\", params: {} });\n  const [auth, setAuth] = useState();\n  const pageContextValue = {\n    setPage,\n    page,\n  };\n  const authContextValue = {\n    setAuth,\n    auth,\n  };\n  const PageComponent = pages.has(page.name)\n    ? pages.get(page.name)\n    : pages.get(DEFAULT_PAGE);\n\n  document.documentElement.requestFullscreen();\n\n  return (\n    <PageContext.Provider value={pageContextValue}>\n      <AuthContext.Provider value={authContextValue}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <PageComponent />\n        </Suspense>\n      </AuthContext.Provider>\n    </PageContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React, { useContext, useEffect } from \"react\";\nimport { useGoogleLogin } from \"react-google-login\";\nimport { GOOGLE_SCOPE, GOOGLE_CLIENT_ID } from \"../environment\";\n\nexport const PageContext = React.createContext(null);\nexport const usePage = () => useContext(PageContext);\n\nexport const AuthContext = React.createContext(null);\nexport const useAuth = () => {\n  const { setAuth, auth } = useContext(AuthContext);\n  const { signIn } = useGoogleLogin({\n    onSuccess: (response) => setAuth(response),\n    clientId: GOOGLE_CLIENT_ID,\n    scope: GOOGLE_SCOPE,\n  });\n  useEffect(() => {\n    !auth && signIn();\n  }, [auth, signIn]);\n  return auth;\n};\n","export const GOOGLE_CLIENT_ID =\n  \"488762331302-o2knjrrhfk1bc4f5fecusvaod97uosdt.apps.googleusercontent.com\";\n\nexport const GOOGLE_SCOPE =\n  \"https://www.googleapis.com/auth/photoslibrary.readonly\";\n"],"sourceRoot":""}